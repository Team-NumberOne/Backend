name: NumberOne-Backend-CICD (fade-out)

# event trigger
on:
  push:
    branches: [ " " ] # none

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      ## jdk setting
      - uses: actions/checkout@v3
      - name: üß± Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # https://github.com/actions/setup-java

      ## gradle caching
      - name: üêß Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: üêß Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: üîß Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      - name:  üêô docker-compose.yml to EC2 server
#        if: contains(github.ref, 'main')
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          envs: GITHUB_SHA
          source: "./docker-compose.yml"
          target: "/home/ubuntu/"
          overwrite: true
          timeout: 1m

      - name: üêß create application.yml
#        if: contains(github.ref, 'main')
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.PROPERTIES_PROD }}" | base64 --decode > ./application.yml
          ls -la
        shell: bash

      - name: üêß create service-account.json
        run: |
          cd ./src/main/resources
          touch ./service-account.json
          echo "${{ secrets.FCM }}" | base64 --decode > ./service-account.json
          ls -la
        shell: bash

      - name: üêß Build With Gradle
#        if: contains(github.ref, 'main')
        run: ./gradlew build -x test


      ## docker build & push to production
      - name: üêã Docker build & push to prod
#        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
      

      ## deploy to production
      - name: üåø Deploy
        uses: appleboy/ssh-action@master
        id: deploy-prod
#        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
            docker-compose up -d
            docker image prune -f

      ## notify at Slack
      - name: üîî Send Slack Message
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, message, commit, author, action, eventName, ref, workflow, pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()