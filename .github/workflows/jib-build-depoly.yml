name: NumberOne-Backend-JIB-BUILD-DEPLOY

# event trigger
on:
  push:
    branches: [ "main", "dev", "dev-check", "feat/multi-module" ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      ## jdk setting
      - uses: actions/checkout@v3
      - name: 🧱 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # https://github.com/actions/setup-java

      ## gradle caching
      - name: 🐧 Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-          

      - name: 🐧 Grant execute permission for gradlew
        run: chmod +x gradlew


      - name: get Current Time
        run: echo "CURRENT_TIME=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: 🔔 Send Slack Message when deploy started
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "attachments": [
                {
                  "pretext": "대피로 백엔드 배포 시작 👻",
                  "fields":  [
                     {
                       "title": "Author 🧑‍💻",
                       "value": "${{ github.actor }}",
                       "short": true
                     },
                     {
                       "title": "Deploy time 🕚",
                       "value": "${{ env.CURRENT_TIME }}",
                       "short": true
                    ]
                   }
                ]
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐧 create application.yml
        run: |
          mkdir -p ./daepiro-api/src/main/resources
          cd ./daepiro-api/src/main/resources
          touch ./application.yml
          echo "${{ secrets.PROPERTIES_PROD }}" | base64 --decode > ./application.yml
          ls -la
        shell: bash

      - name: 🐧 create service-account.json
        run: |
          cd ./daepiro-api/src/main/resources
          touch ./service-account.json
          echo "${{ secrets.FCM }}" | base64 --decode > ./service-account.json
          ls -la
        shell: bash

      - name: Build with jib
        run: |
          ./gradlew :daepiro-api:jib -x test \
          -Djib.to.auth.username=${{ secrets.DOCKER_USERNAME }} \
          -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }} \
          -Djib.to.image="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest"
        env:
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
          JMX_PORT: ${{ secrets.JMX_PORT }}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      ## deploy to production
      - name: 🌿 Deploy
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
            docker-compose up -d
            docker image prune -f

      ## notify at Slack
      - name: 🔔 Send Slack Message
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, message, commit, author, workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()